cd openshift-demos-ansible
ansible-galaxy install -r playbooks/coolstore/requirements.yml
ansible-playbook playbooks/cd-v1/deploy-brewery-1.yml  -e "github_ref=ocp-3.11 ephemeral=true project_suffix=andrew"
ansible-playbook playbooks/cd/undeploy.yml   -e "github_ref=ocp-3.11 ephemeral=true project_suffix=dij"

1.

#导入gogs 及jenkins build
ansible-playbook playbooks/cd-v1/deploy-brewery-3.yml  -e "github_ref=ocp-3.11 ephemeral=true project_suffix=andrew"

oc delete rolebindings/default_admin3 -n cicd-andrew

oc delete job.batch/cicd-demo-installer3  -n cicd-andrew

oc delete configmaps/jenkins-slaves3  -n cicd-andrew

oc delete bc/brewary3-pipeline  -n cicd-andrew

oc adm policy add-scc-to-user privileged -z dev-andrew

oc adm policy add-scc-to-user anyuid -z dev-andrew

oc adm policy add-scc-to-user privileged -z dev-brewery2

oc adm policy add-scc-to-user anyuid -z dev-brewery2

2.

ansible-playbook playbooks/cd-v1/deploy-brewery-2.yml  -e "github_ref=ocp-3.11 ephemeral=true project_suffix=andrew"

oc delete rolebindings/default_admin22 -n cicd-andrew

oc delete job.batch/cicd-demo-installer22  -n cicd-andrew

oc delete job.batch/cicd-demo-installer2  -n cicd-andrew

oc delete configmaps/jenkins-slaves22  -n cicd-andrew

oc delete bc/brewary22-pipeline  -n cicd-andrew

问题处理->oc rollout latest dc/rabbitmq 报错(brewery2-rabbitmq)
Error from server (BadRequest): cannot trigger a deployment for "rabbitmq" because it contains unresolved images

解决->
oc import-image rabbitmq:management --confirm --from  docker.io/rabbitmq:management --insecure

3.

oc new-project dev-brewery

oc policy add-role-to-group edit system:serviceaccounts:cicd-andrew -n dev-brewery3

//oc policy add-role-to-group edit system:serviceaccounts:cicd-andrew -n stage-demo1

#配置跨项目访问,比如以下三项目可以互相访问 cicd-demo1 dev-andrew stage-andrew
oc adm pod-network join-projects --to=cicd-andrew dev-brewery3 // stage-andrew

oc adm policy add-scc-to-user privileged -z dev-brewery3

oc adm policy add-scc-to-user anyuid -z dev-brewery3

oc adm policy add-role-to-user view system:serviceaccount:dev-brewery3:default

ansible-playbook playbooks/cd-v1/deploy-brewery-33.yml  -e "github_ref=ocp-3.11 ephemeral=true project_suffix=andrew"


sudo docker pull kameshsampath/apache-artemis

oc import-image kameshsampath/apache-artemis --confirm --from  docker.io/kameshsampath/apache-artemis --insecure


4.open-capacity-platform

oc new-project dev-open-capacity

oc policy add-role-to-group edit system:serviceaccounts:cicd-andrew -n dev-open-capacity

oc adm pod-network join-projects --to=cicd-andrew dev-open-capacity

oc adm policy add-scc-to-user privileged -z dev-open-capacity

oc adm policy add-scc-to-user anyuid -z dev-open-capacity

oc adm policy add-role-to-user view system:serviceaccount:dev-open-capacity:default

ansible-playbook playbooks/cd-open-capacity/deploy-capacity-1.yml  -e "github_ref=ocp-3.11 ephemeral=true project_suffix=andrew"

https://docs.openshift.com/container-platform/3.11/using_images/db_images/mysql.html

docker pull centos/mysql-57-centos7

oc new-app -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_DATABASE=test openshift/mysql-57-centos7

    registry.redhat.io/rhscl/mysql-56-rhel7

oc rsh <pod>

oc set env pod <pod_name> --list

oc set env dc <dc_name> [<dc_name_2> ...] \
  MYSQL_PASSWORD=<new_password> \
  MYSQL_ROOT_PASSWORD=<new_root_password>

  mysql -u $MYSQL_USER -p<new_password> -h $HOSTNAME $MYSQL_DATABASE -te "SELECT * FROM (SELECT database()) db CROSS JOIN (SELECT user()) u"

  mysql -u root -p<new_root_password> -h $HOSTNAME $MYSQL_DATABASE -te "SELECT * FROM (SELECT database()) db CROSS JOIN (SELECT user()) u"
